worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections  4096;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;

  server {
      listen 80;
      listen [::]:80;
      # server_name localhost;

      # ignore_invalid_headers off;

      location / {
          client_max_body_size 10m;
          client_body_buffer_size 128k;

          proxy_buffering off;

          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          proxy_connect_timeout 300;

          proxy_set_header Connection "";
          chunked_transfer_encoding off;

          # proxy_pass http://minio;
      }
      # rewrite ^ https://$server_name$request_uri? permanent;
  }
}

# https {
#   server {
#       listen 443 ssl;

#       server_name KEYCLOAK_DOMAIN_NAME;

#       # Logging (optional, but probably want it for debugging)
#       access_log /var/log/nginx/keycloak-access.log;
#       error_log /var/log/nginx/keycloak-error.log info;

#       ## Keep alive timeout set to a greater value for SSL/TLS.
#       keepalive_timeout 75 75;

#       # Locations of certs using Certbot
#       # create certificates
#       # ssl_certificate /etc/letsencrypt/live/KEYCLOAK_DOMAIN_NAME/fullchain.pem;
#       # ssl_certificate_key /etc/letsencrypt/live/KEYCLOAK_DOMAIN_NAME/privkey.pem;
#       ssl_session_timeout 5m;

#       # Forces browsers to redirect to HTTPS themselves for 31536000 seconds (1 year).
#       # includeSubDomains will cause this to upgrade HTTP on all subdomains of the given domain.
#       # preload adds your domain to a list of domains for browsers to automatically upgrade to HTTPS, no mattter what.
#       # always will append the header no matter the return code.
#       add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

#       # SSO requests tend to be very long, will fail on default settings.
#       proxy_buffer_size 12k;

#       proxy_set_header Host $host;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Host $host;
#       proxy_set_header X-Forwarded-Server $host;
#       proxy_set_header X-Forwarded-Proto https;

#       location /js/ {
#           proxy_pass http://127.0.0.1:7214;
#       }

#       location /realms/ {
#           proxy_pass http://127.0.0.1:7214;
#       }

#       location /resources/ {
#           proxy_pass http://127.0.0.1:7214;
#       }

#       location /robots.txt {
#           proxy_pass http://127.0.0.1:7214;
#       }

#       # We don't really care about anything else.
#       location / {
#           return 404;
#       }

#       # -------------------
#       # I recommend deleting the /admin/ endpoint once done for security reasons.
#       # -------------------

#       location /admin/ {
#           proxy_pass http://127.0.0.1:7214;
#       }

#   }
# }