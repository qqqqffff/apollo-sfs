services:
  oauth2-proxy:
    container_name: oauth2-proxy
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.12.0
    command: 
      - "--config /oauth2-proxy.cfg"
    hostname: oauth2-proxy
    volumes:
      - "./oauth2-proxy-keycloak.cfg:/oauth2-proxy.cfg"
    restart: unless-stopped
    environment:
      - OAUTH2_PROXY_EMAIL_DOMAINS=*
      - OAUTH2_PROXY_SESSION_STORE_TYPE=cookie
      - OAUTH2_PROXY_COOKIE_SAMESITE=lax
      - OAUTH2_PROXY_REVERSE_PROXY=true
      - OAUTH2_PROXY_COOKIE_CSRF_PER_REQUEST=true
      - OAUTH2_PROXY_COOKIE_CSRF_EXPIRE=15m
      - OAUTH2_PROXY_SCOPE=user:email
      - OAUTH2_PROXY_SKIP_PROVIDER_BUTTON=false
      - OAUTH2_PROXY_PASS_USER_HEADERS=true
      - OAUTH2_PROXY_SET_XAUTHREQUEST=true
    ports:
      - 4180:4180
      - 443:443
    networks:
      proxy-network: {}
    depends_on:
      - keycloak
  postgres:
    container_name: postgres
    image: postgres:16.2
    volumes:
      - ${PWD}/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks: 
      proxy-network: {}
  keycloak:
    container_name: keycloak
    image: keycloak/keycloak:25.0
    hostname: keycloak
    command: 
      - 'start'
      # keytool -genkeypair -alias localhost -keyalg RSA -keysize 2048 -validity 365 -keystore server.keystore -dname "cn=ServerAdministrator,o=Apollo,c=US" -keypass secret -storepass secret
    volumes:
      - "./keycloak:/opt/keycloak/data/"
      - ${PWD}/server.keystore:/opt/keycloak/certs/server.keystore
    environment:
      KC_PROXY: edge
      KC_HOSTNAME: localhost
      # KC_HOSTNAME_PORT: 8080
      # KC_HOSTNAME_STRICT_BACKCHANNEL: false
      # KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: true
      KC_HOSTNAME_STRICT: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin@example.com
      KEYCLOAK_ADMIN_PASSWORD: password
      KEYCLOAK_PRODUCTION: true
      KEYCLOAK_ENABLE_TLS: true
      KEYCLOAK_TLS_KEYSTORE_FILE: /opt/keycloak/certs/server.keystore
      KEYCLOAK_TLS_KEYSTORE_PASSWORD: secret
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    ports:
      - 8080:8080
    depends_on:
      - postgres
    networks:
      proxy-network: {}
  httpbin:
    container_name: httpbin
    image: kennethreitz/httpbin
    restart: unless-stopped
    ports:
      - 8000:80
    networks:
      proxy-network: {}
  nginx:
    container_name: nginx
    image: nginx:1.29.2
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 7214:80
    depends_on:
      - oauth2-proxy
      - httpbin
    networks:
      proxy-network: {}
networks:
  proxy-network:
    name: local