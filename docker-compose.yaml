services:
  postgres:
    container_name: postgres
    image: postgres:16.2
    volumes:
      - ${PWD}/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    networks: 
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 1m30s
      timeout: 5s
      retries: 5
      start_period: 30s
  keycloak:
    container_name: keycloak
    image: keycloak/keycloak:25.0
    hostname: keycloak
    command: 
      - 'start'
      # keytool -genkeypair -alias localhost -keyalg RSA -keysize 2048 -validity 365 -keystore server.keystore -dname "cn=ServerAdministrator,o=Apollo,c=US" -keypass secret -storepass secret
    volumes:
      - "./keycloak:/opt/keycloak/data/"
      - "./nginx/ssl:/opt/keycloak/ssl:ro"
    environment:
      KC_PROXY: edge
      KC_HOSTNAME: ${DOMAIN:-localhost}
      KC_PROXY_HEADERS: xforwarded
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HOSTNAME_STRICT: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin@example.com
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KEYCLOAK_PRODUCTION: true
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: ${DB_PASSWORD:-changeme}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl", "-f", "http://localhost:8080/health/ready || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
  minio:
    container_name: minio
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_SERVER_URL: "http://minio:9000"
      MINIO_BROWSER_REDIRECT_URL: "https://${DOMAIN-localhost}/minio-console"
      MINIO_IDENTITY_OPENID_CONFIG_URL: "https://${DOMAIN:-localhost}/auth/realms/${KEYCLOAK_REALM:-master}/.well-known/openid-configuration"
      MINIO_IDENTITY_OPENID_CLIENT_ID: "${MINIO_OIDC_CLIENT_ID:-minio}"
      MINIO_IDENTITY_OPENID_SCOPES: "openid,profile,email"
      MINIO_IDENTITY_OPENID_CLAIM_NAME: "policy"
      MINIO_IDENTITY_OPENID_REDIRECT_URI: "https://${DOMAIN:-localhost}/minio-console/oauth_callback"
      MINIO_IDENTITY_OPENID_DISPLAY_NAME: "Login with keycloak"
    volumes:
      - minio/nvme-01:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      - keycloak
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: frontend
    environment:
      NODE_ENV: production
    networks:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: backend
    environment:
      PORT: "8080"
      FRONTEND_URL: "https://${DOMAIN:-localhost}"
      KEYCLOAK_URL: "http://keycloak:8080/auth"
      KEYCLOAK_REALM: "${KEYCLOAK_REALM:-apollo-sfs-realm}"
      KEYCLOAK_CLIENT_ID: "apollo-sfs-backend"
      KEYCLOAK_CLIENT_SECRET: "${BACKEND_CLIENT_SECRET}"
      MINIO_ENDPOINT: "minio:9000"
      MINIO_ACCESS_KEY: "${MINIO_ROOT_USER:-minioadmin}"
      MINIO_SECRET_KEY: "${MINIO_ROOT_PASSWORD:-minioadmin}"
      MINIO_BUCKET: "user-files"
      MINIO_USE_SSL: "false"
    depends_on:
      - keycloak
      - minio
    networks:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
  nginx:
    container_name: nginx
    image: nginx:1.29.2
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/certbot/www:/var/www/certbot:ro
    ports:
      - 80:80
      - 443:443
    depends_on:
      - keycloak
      - minio
    networks:
      - frontend
      - backend
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
volumes:
  postgres:
    driver: local
  minio:
    driver: local


